- name: Get token system directory
  command: "condor_config_val SEC_TOKEN_SYSTEM_DIRECTORY"
  register: SEC_TOKEN_SYSTEM_DIRECTORY
  changed_when: SEC_TOKEN_SYSTEM_DIRECTORY.rc == 0

- name: Get token directory
  command: "condor_config_val SEC_TOKEN_DIRECTORY"
  register: SEC_TOKEN_DIRECTORY
  changed_when: SEC_TOKEN_DIRECTORY.rc == 0

- name: Get token password directory
  command: "condor_config_val SEC_PASSWORD_DIRECTORY"
  register: SEC_PASSWORD_DIRECTORY
  changed_when: SEC_PASSWORD_DIRECTORY.rc == 0

- name: Add directory for token passwords
  file:
    path: "{{ SEC_PASSWORD_DIRECTORY.stdout }}"
    recurse: yes
    state: directory
    mode: 0700
  when:
    - HTCONDOR_TOKEN_PASSWORD is defined

- name: Add system directory for tokens
  file:
    path: "{{ SEC_TOKEN_SYSTEM_DIRECTORY.stdout }}"
    recurse: yes
    state: directory
    mode: 0700
  when:
    - HTCONDOR_TOKEN is defined
    - SEC_TOKEN_SYSTEM_DIRECTORY.stdout | length > 0

- name: Add directory for tokens
  file:
    path: "{{ SEC_TOKEN_DIRECTORY.stdout }}"
    recurse: yes
    state: directory
    mode: 0700
  when:
    - HTCONDOR_TOKEN is defined
    - SEC_TOKEN_DIRECTORY.stdout | length > 0

- name: Add tokens to directory
  vars:
    directories:
      - "{{ SEC_TOKEN_SYSTEM_DIRECTORY.stdout }}"
      - "{{ SEC_TOKEN_DIRECTORY.stdout }}"
  include_tasks: add_token.yaml
  loop: "{{ HTCONDOR_TOKEN | dict2items | product(directories)|list }}"
  loop_control:
    label: "Adding tokens to {{ item[1] }}"
  when:
    - HTCONDOR_TOKEN is defined
    - item[1] | length > 0

- name: Add token passwords to directory
  include_tasks: add_token_password.yaml
  loop: "{{ HTCONDOR_TOKEN_PASSWORD | dict2items }}"
  loop_control:
    label: "Adding token password to {{ SEC_PASSWORD_DIRECTORY.stdout + item.key }}"
  when:
    - HTCONDOR_TOKEN_PASSWORD is defined
    - item.key | length > 0
